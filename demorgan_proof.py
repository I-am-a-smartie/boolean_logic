from manim import *


class proof(Scene):
    def construct(self):
        formula = MathTex("\overline{X.Y} = \overline{X} + \overline{Y}")
        formula.to_corner(UR)
        title = Tex("DeMorgan's Second Theorem")
        title.to_corner(UL)
        self.play(Write(title))
        self.play(Write(formula))
        self.wait()

        pre = Tex('Laws used - Complementarity Laws')
        pre.move_to(UP * 2)
        self.play(Write(pre))
        self.wait(1)
        law1 = MathTex("X + \overline{X} = 1")
        law1.move_to(UP * 0.5)
        law2 = MathTex('X.\overline{X} = 0')
        law2.next_to(law1, DOWN * 1.5)
        self.play(Write(law1), Write(law2))
        laws = VGroup(pre, law1, law2)
        self.play(Uncreate(laws))
        self.wait(2)
        given = Tex('From given theorem, W.K.T')
        given.next_to(title, DOWN * 1.5)
        self.play(Write(given))
        understand = MathTex(
            'If \\ X \\ and \\ Y \\ complement \\ is \\ same \\ as \\ \overline{X} \\ or \\ \overline{Y} \\ then,')
        understand.scale(0.9)
        understand.move_to(UP * 1)
        self.play(Write(understand))
        infer1 = MathTex('XY + (\overline{X} + \overline{Y}) = 1')

        infer2 = MathTex('XY . (\overline{X} + \overline{Y}) = 0')
        infer2.next_to(infer1, DOWN * 1.5)

        infer = VGroup(infer1, infer2)
        self.play(Write(infer))
        self.wait(2)
        infer.generate_target()
        infer.target.scale(0.7)
        infer.target.next_to(formula, DOWN * 2)
        self.play(MoveToTarget(infer), Uncreate(understand))
        self.wait(2)

        line12 = MathTex('XY + (\overline{X} + \overline{Y}) = 1')
        line12.move_to(UP * 2)
        line13 = MathTex('=(\overline{X} + \overline{Y}) +  XY')
        line13.next_to(line12, DOWN * 1.5)
        line14 = MathTex('=(\overline{X} + \overline{Y} + X).(\overline{X} + \overline{Y} + Y)')
        line14.next_to(line13, DOWN * 1.5)
        line15 = MathTex('=(X + \overline{X} + \overline{Y}).(Y + \overline{X} + \overline{Y})')
        line15.next_to(line14, DOWN * 1.5)
        line16 = MathTex('=(1 + \overline{Y}).(\overline{X} + 1)')
        line16.next_to(line15, DOWN * 1.5)
        line17 = MathTex('=1.1')
        line17.next_to(line16, DOWN * 1.5)
        line18 = MathTex('=1=RHS')
        line18.next_to(line17, DOWN * 1.5)
        fb1 = SurroundingRectangle(infer1)
        self.play(Create(fb1))
        line1 = VGroup(line13, line14, line15, line16, line17, line18)
        for i in range(0, len(line1)):
            self.play(Write(line1[i]))
            self.wait(5)

        fb2 = SurroundingRectangle(infer2)

        self.wait(5)
        self.play(Uncreate(line1), ReplacementTransform(fb1, fb2))
        self.wait(1)

        line22 = MathTex('XY + (\overline{X} + \overline{Y}) = 1')
        line22.move_to(UP * 2)
        line23 = MathTex('=XY.(\overline{X} + \overline{Y})')
        line23.next_to(line22, DOWN * 1.5)
        line24 = MathTex('=XY\overline{X} + XY\overline{Y}')
        line24.next_to(line23, DOWN * 1.5)
        line25 = MathTex('=X\overline{X}Y + XY\overline{Y}')
        line25.next_to(line24, DOWN * 1.5)
        line26 = MathTex('=0.Y + X.0')
        line26.next_to(line25, DOWN * 1.5)
        line27 = MathTex('=0+0')
        line27.next_to(line26, DOWN * 1.5)
        line28 = MathTex('=0=RHS')
        line28.next_to(line27, DOWN * 1.5)

        line2 = VGroup(line23, line24, line25, line26, line27, line28)
        for j in range(0, len(line2)):
            self.play(Write(line2[j]))
            self.wait(5)

        self.play(Uncreate(given), Uncreate(infer), Uncreate(given), Uncreate(line2), Uncreate(fb2))
        formula_final = MathTex("\overline{X.Y} = \overline{X} + \overline{Y}")
        formula_final.move_to(DOWN*0.5)
        hence = Tex('Hence, proved')
        hence.next_to(formula_final, UP*1.5)
        self.play(ReplacementTransform(formula.copy(), formula_final), Write(hence))